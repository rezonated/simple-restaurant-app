
import java.sql.*;
import java.util.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;

class pesanan {

    String menus = "";
    int qtys, hargas;
    boolean bawapulangs = false;

    public pesanan(String menu, int qty, int harga, boolean bawapulang) {
        this.menus = menu;
        this.qtys = qty;
        this.hargas = harga;
        this.bawapulangs = bawapulang;
    }

    String getmenu() {
        return this.menus;
    }

    int getqty() {
        return this.qtys;
    }

    int getharga() {
        return this.hargas;
    }

    boolean getbawapulang() {
        return this.bawapulangs;
    }
}

public class menuRestaurant extends javax.swing.JFrame {

    public ArrayList<pesanan> pesananList = new ArrayList<pesanan>();
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/restaurant";
    static final String USER = "root";
    static final String PASS = "";
    static Connection conn;
    static Statement stmt;
    static ResultSet rs;
    int hargah, bayar, kembali;
    public ArrayList<pesanan> getList(){
        return pesananList;
    }
    public menuRestaurant() {
        initComponents();
        this.setLocationRelativeTo(getRootPane());
        try {

            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();

        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String query = "SELECT username FROM user WHERE login_flag=1";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                loggedUser.setText(rs.getString("username"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String sql = "SELECT menu, harga FROM menu";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    SpinnerModel model = new SpinnerNumberModel(1, 1, 100, 1);
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        menu = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        qty = new javax.swing.JSpinner(model);
        jLabel4 = new javax.swing.JLabel();
        bawapulang = new javax.swing.JCheckBox();
        submit = new javax.swing.JButton();
        lihat = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        loggedUser = new javax.swing.JLabel();
        logout = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Resto Kane Bos");

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu", "Harga"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        jLabel2.setText("Menu");

        jLabel3.setText("Harga");

        qty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                qtyStateChanged(evt);
            }
        });

        jLabel4.setText("Qty");

        bawapulang.setText("Bawa Pulang");

        submit.setText("Submit Pesenan");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        lihat.setText("Lihat Pesenan");
        lihat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatActionPerformed(evt);
            }
        });

        jLabel5.setText("User: ");

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bawapulang))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(logout)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(loggedUser))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(124, 124, 124)
                                .addComponent(jLabel3))
                            .addComponent(submit))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(lihat)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(logout))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(loggedUser)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bawapulang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(lihat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed

    }//GEN-LAST:event_menuActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if ((int) qty.getValue() != 1) {
            qty.setValue(1);
        }
        menu.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        harga.setText(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 1)));
    }//GEN-LAST:event_jTable1MouseClicked

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        pesananList.add(new pesanan(menu.getText(), Integer.parseInt(harga.getText()), (int) qty.getValue(), bawapulang.isSelected()));
        JOptionPane.showMessageDialog(null, "Tersimpan");
    }//GEN-LAST:event_submitActionPerformed

    private void qtyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_qtyStateChanged
        int temp = (int) (jTable1.getValueAt(jTable1.getSelectedRow(), 1));
        int hargaxqty = (Integer) qty.getValue() * temp;
        harga.setText(String.valueOf(hargaxqty));
    }//GEN-LAST:event_qtyStateChanged

    private void lihatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatActionPerformed
        if (pesananList.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Belum ada pesanan!");
        } else {
            int total = 0;
            String yn = "";
            StringBuilder sb = new StringBuilder();
            for (pesanan pesananz : pesananList) {
                if (pesananz.getbawapulang()) {
                    yn = "Iyak";
                } else {
                    yn = "Ngga";
                }
                sb.append("Menu: " + pesananz.getmenu() + "(" + pesananz.getharga() + ")\nHarga: " + pesananz.getqty() + "\nBawa Pulang: ").append(yn).append("\n");
                total += pesananz.getqty();
            }
            int bayaran = Integer.parseInt(JOptionPane.showInputDialog("Pesanan:\n\n" + sb + "\n\nTotal: Rp" + total + "\nSilahkan masukkan pembayaran: "));
            int kembalian = bayaran - total;
            if (kembalian < bayaran) {
                JOptionPane.showMessageDialog(null, "Uang tidak mencukupi");
            } else {
                JOptionPane.showMessageDialog(null, "Kembalian: Rp" + (kembalian));

                for (pesanan pesananz : pesananList) {
                    try {
                        String sql = "INSERT INTO transaksi (menu, qty, harga, total, bayar, kembalian, bawapulang) VALUES(?,?,?,?,?,?," + pesananz.getbawapulang() + ")";
                        PreparedStatement pst = conn.prepareStatement(sql);
                        pst.setString(1, pesananz.getmenu());
                        pst.setString(2, String.valueOf(pesananz.getharga()));
                        pst.setString(3, String.valueOf(pesananz.getqty()));
                        pst.setString(4, String.valueOf(total));
                        pst.setString(5, String.valueOf(bayaran));
                        pst.setString(6, String.valueOf(kembalian));
                        pst.execute();
                        pst.close();

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                menu.setText("");
                harga.setText(null);
                qty.setValue((int) 1);
                bawapulang.setSelected(false);
            }
        }
    }//GEN-LAST:event_lihatActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        try {
                String query = "UPDATE user SET login_flag = '0' WHERE login_flag='1'";
                PreparedStatement pst = conn.prepareStatement(query);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Gudbhay~");
                pst.close();
                new loginApp().setVisible(true);
                dispose();
            } catch (Exception e) {
                e.printStackTrace();
            }
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuRestaurant.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuRestaurant.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuRestaurant.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuRestaurant.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuRestaurant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bawapulang;
    private javax.swing.JTextField harga;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton lihat;
    private javax.swing.JLabel loggedUser;
    private javax.swing.JButton logout;
    private javax.swing.JTextField menu;
    private javax.swing.JSpinner qty;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
